cbuffer MatBuffer : register(b0)
{
	matrix matWorld;
	matrix matView;
	matrix matProj;
	matrix matViewProj;
};

cbuffer LightBuffer : register(b1)
{
	float3 lightDir;
	float3 eyeDir;
	float4 ambColor;
}

struct Output
{
	float4 position : SV_POSITION;
	float4 color	: COLOR0;
	float3 normal	: NORMAL0;
};


float4 main(Output o) : SV_TARGET0
{
	//float3 transNormal = mul(matWorld, o.normal);	// this is wrong for normal tranfrom	
	float3 transNormal = o.normal;	// this is wrong for normal tranfrom	


	float cos = max(0, dot(transNormal, eyeDir));

	return o.color * cos;
}